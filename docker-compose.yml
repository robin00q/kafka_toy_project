version: "3"
services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:7.1.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - kafka_net


  kafka-1:
    image: confluentinc/cp-kafka:7.1.1
    depends_on:
      - zookeeper-1
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      # 브로커 간 통신에서 사용하는 리스너의 이름을 정의한다.
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      # 외부에서 접근하는 클라이언트가 사용할 리스너가 "listeners 설정" 과 다른 경우, 사용하는 리스너이다.
      # 외부 클라이언트가 사용할 수 있도록 zookeeper 에 게시한다.
      ### INTERNAL 로 정의한 부분은 브로커 간의 통신에서 사용할 것이고, (for Docker Internal Network)
      ### EXTERNAL 로 정의한 부분은 외부에서 프로듀서, 컨슈머의 요청의 통신에서 사용한다. (for External Clients)
      ### 참고 : https://www.confluent.io/ko-kr/blog/kafka-listeners-explained/
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:9092,EXTERNAL://localhost:29092
      # 리스너 이름과 보안프로토콜 간의 매핑
      # PLAINTEXT : 암호화 되지않은 인증이없는 프로토콜
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka_net

  kafka-2:
    image: confluentinc/cp-kafka:7.1.1
    depends_on:
      - zookeeper-1
      - kafka-1
    ports:
      - 39092:39092
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:9092,EXTERNAL://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka_net

networks:
  kafka_net:
    driver: bridge